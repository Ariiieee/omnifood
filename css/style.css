/* HEADER COMPONENTS */
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: #fdf2e9;
  /* because i want the header to be sticky later */
  height: 9.6rem;
  padding: 0 4.8rem;
}

.logo {
  height: 2.2rem;
}

/* NAVIGATION */
.main-nav_list {
  list-style: none;
  display: flex;
  gap: 3.2rem;
  align-items: center;
}

.main-nav_link:link,
.main-nav_link:visited {
  display: inline-block;
  text-decoration: none;
  font-size: 1.8rem;
  font-weight: 500;
  color: #333;
  transition: all 0.3s;
}

.main-nav_link:hover,
.main-nav_link:active {
  color: #cf711f;
}

.main-nav_link.nav-cta:link,
.main-nav_link.nav-cta:visited {
  background-color: #e67e22;
  padding: 1.2rem 2.4rem;
  border-radius: 9px;
  font-weight: 500;
  color: #fff;
} /* this style will only be applied if element contains the two classes */

.main-nav_link.nav-cta:hover,
.main_nav_link.nav-cta:active {
  background-color: #cf711f;
}

/* HERO COMPONENTS */
.section-hero {
  background-color: #fdf2e9;
  padding: 4.8rem 0 9.6rem 0; /*note: this is when adding space in your section container */
}

/* use grid when building a layout, note that in the hero section there are two div's, the one containing the text and the one containing the image, nb: take note of your rough sketch on how you want the image to be placed */
/* also have a grid container(this is to create a fixed size container(fixed width) inside a section, here the content for responsiveness */

.hero-grid {
  max-width: 130rem; /*the fixed width */ /*using width: 130rem will give the page vertical scroll and cut the content, instead i used "max-width" */
  padding: 3.2rem;
  margin: 0 auto;
  display: grid;
  grid-template-columns: 1fr 1fr; /*because we have to div's that should be side by side in the container */
  align-items: center; /*align items in the grid , i.e the text content, h1 and p*/
  gap: 9.6rem; /* used in css grid to space content */
}

/* use the rem unit to size everything on our page */
/* smaller font-size use bigger line-height and vice-versa */
/* bigger font-size like h1, reduce the letter spacing */

.hero-description {
  font-size: 2rem;
  line-height: 1.6;
  margin-bottom: 4.8rem;
}

.hero-img {
  width: 100%; /*this will fill the entire parent element. that contains the image itself (the box)*/
}

.delivered-meals {
  display: flex;
  align-items: center;
  margin-top: 8rem;
  gap: 1.6rem;
}

.delivered-imgs {
  display: flex;
}

.delivered-imgs img {
  width: 4.8rem;
  height: 4.8rem;
  border-radius: 50%;
  margin-right: -1.6rem; /*the stacking of the customer images side by side on each other  */
  border: 3px solid #fdf2e9;
}

.delivered-imgs img:last-child {
  margin: 0;
}

.delivered-text {
  font-size: 1.8rem;
  font-weight: 600;
}

.distinct {
  color: #cf711f; /* used color picker from coolers to check contrast is compatible with background color and color of text */
  font-weight: 700;
}

/* notes */
/* the next div after the section is the one that takes classes like the grid system and center elements in a container i.e container, so that background images or colors extends across the section container */

/* hero section is or should be wider than the rest of the other section contents in our projects*/

/* ======================== */
/*  FEATURED IN SECTION */
/* ======================= */

.section-featured {
  padding: 4.6rem 0 3.2rem 0;
}

.heading-featured-in {
  font-size: 1.4rem;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.75px;
  text-align: center;
  margin-bottom: 2.4rem;
  color: #888;
}

.logos {
  display: flex;
  justify-content: space-around;
}

.logos img {
  height: 3.2rem;

  /* this turns the logo image to black, I then use opacity(to increase the transparency level of an element to turn the logo images to grey*/
  filter: brightness(0);
  opacity: 50%;
}

/* ======================== */
/*  SECTION HOW IT WORKS */
/* ======================= */

.section-how {
  padding: 9.6rem 0;
}

.step-number {
  font-size: 8.6rem;
  color: #ddd;
  margin-bottom: 1.2rem;
}

.step-description {
  font-size: 1.8rem;
  line-height: 1.8;
}

.step-img-box {
  position: relative;

  display: flex;
  justify-content: center;
  align-items: center;
}

/* additional styling (circle) to the iphone images in the how it works section */

.step-img-box::before,
.step-img-box::after {
  content: "";
  display: block;
  border-radius: 50%;
  position: absolute;
  transform: translate(-50% -50%);
}

.step-img-box::before {
  width: 60%;

  /* height: 60%; */
  /* 60% of parent's width */
  /* this will create an intrinsic height of 0, with a padding of 60%; which will then make it square as height: 60%, didn't have any effect in our project */
  padding-bottom: 60%;
  background-color: #fdf2e9;
  z-index: -2;
}

/*creating the smaller circle */
.step-img-box::after {
  width: 45%;
  padding-bottom: 45%;
  background-color: #fae5d3;
  z-index: -1;
}

/* we can center an img in its container box using flex, if its to close together with other elements in a section */

.step-img {
  width: 35%; /* the iphone image to occupy 50% of it's parent container */
}

/* notes */
/* you can split your css files into separate files to avoid cumbersome code in one css file */

/* ======================== */
/*  MEALS SECTION */
/* ======================= */

.section-meals {
  padding: 9.6rem 0;
}

.meal {
  box-shadow: 0 2.4rem 4.8rem rgba(0, 0, 0, 0.075);
  border-radius: 11px;
  /* whatever overflows the container which is unable to show border-radius due to the image being at the the top we set overflow: hidden ---- this can also fix when image corners are not rounded at the top*/
  overflow: hidden;
  transition: all 0.4s;
}

.meal:hover {
  transform: translateY(-2rem);
  /* made the box-shadow larger when I hover on the  meal cart,-shadow unit values were increased */
  box-shadow: 0 3.2rem 6.4rem rgba(0, 0, 0, 0.05);
}

.meal-img {
  width: 100%;
}

.meal-content {
  padding: 3.2rem 4.8rem 4.8rem 4.8rem;
}

.meal-title {
  font-size: 2.4rem;
  font-weight: 600;
  color: #333;
  margin-bottom: 3.2rem;
}

.meal-tags {
  margin-bottom: 1.2rem;
  display: flex;
  gap: 0.4rem;
}

.tag {
  display: inline-block;
  padding: 0.4rem 0.8rem;
  font-size: 1.2rem;
  text-transform: uppercase;
  color: #333;
  border-radius: 100px;
  font-weight: 600;
}

.tag--vegetarian {
  background-color: #51cf66;
}

.tag--vegan {
  background-color: #94d82d;
}

.tag--paleo {
  background-color: #ffd43b;
}

.meal-attributes {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.meal-attribute {
  font-size: 1.8rem;
  display: flex;
  align-items: center;
  gap: 2.4rem;
}

.meal-icon {
  height: 2.4rem;
  width: 2.4rem;
  color: #e67e22;
}

/* when styling images, like the images in the cart, the images must have the same dimension aka aspect ratio, so it gives the same effect, i.e how the image is positioned in the cart i.e both food images have both aspect ratio and fit perfectly well with our styles in the card */

.all-recipes {
  text-align: center;
  font-size: 1.8rem;
}

/* ======================== */
/*  TESTIMONIAL SECTION*/
/* ======================= */

.section-testimonials {
  background-color: #fdf2e9;
  display: grid;
  /* the below values were used in my section to narrow one side of the container which is the image gallery, setting 50fr 50fr like this just shows the dcolumn with same width,changing the values slightly below just to show one should be a little bigger than the other*/
  /* it doesn't have to add up to 100, we do this to think of it in terms of percentage */
  grid-template-columns: 55fr 45fr;

  /* this will fix the row-gap from enlarging when in smaller screen sizes */
  align-items: center;
}

.testimonials-container {
  padding: 9.6rem;
}

.testimonials {
  display: grid;
  grid-template-columns: 1fr 1fr;
  row-gap: 4.8rem;
  column-gap: 8rem;
}

.testimonial-img {
  /* setting fixed width for the image, don't want it to be fluid, hence not using %, because it would too big */
  width: 6.4rem;
  border-radius: 50%;
  margin-bottom: 1.2rem;
}

.testimonial-text {
  font-size: 1.8rem;
  line-height: 1.8;
  margin-bottom: 1.6rem;
  font-weight: 500;
}

.testimonial-name {
  font-size: 1.6rem;
  color: #6f6f6f;
}

/* Gallery */

.gallery {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1.6rem;
  padding: 1.6rem;
}

/* the image scales when i hover over it, it overflows it parent element, nb: use grid to see for myself, therefore the below was set to fix it */
.gallery-item {
  overflow: hidden;
}

.gallery-item img {
  /* this will fix the white space on top of the image one after the other because the image is an inline element, setting display "block" removes the whitespace  */
  display: block;
  width: 100%;
  transition: all 0.4s;
}

.gallery-item img:hover {
  transform: scale(1.1);
}

/* ======================== */
/* PRICING SECTION*/
/* ======================= */

.section-pricing {
  padding: 9.6rem 0;
}

.pricing-plan {
  border-radius: 11px;
  /* i can reduce the width of a content in it's grid container, as done below, this to reduce the width of a column (taking 75% of its grid-container instead of the initial 100% (default)) */
  width: 75%;
}

/* using the below to bring the pricing plan cards close together  */
/* below explains slight changes in the padding of both pricing plans, that's because the starter has  a border of 2px and that adds to the overall box-sizing of the starter plan which is higher than the complete plan, to balance it out hence the diff in padding in both pricing plans, which still aggregates to 4.8rem */
.pricing-plan--starter {
  justify-self: end;
  border: 2px solid #fdf2e9;
  padding: 4.6rem;
}

.pricing-plan--complete {
  background-color: #fdf2e9;
  padding: 4.8rem;
  position: relative;
  overflow: hidden;
  /* overflow: hidden needs to be on the parent element */
}

.pricing-plan--complete::after {
  content: "best value";
  position: absolute;
  top: 6%;
  right: -18%;

  background-color: #ffd43b;
  padding: 0.8rem 8rem;
  font-size: 1.4rem;
  font-weight: 700;
  color: #333;
  text-transform: uppercase;
  transform: rotate(45deg);
  /* to get the best positioned angle of the best value pseudo class, the padding could be increased and relative value of preference is set to the right */
}

.plan-header {
  text-align: center;
  margin-bottom: 4.8rem;
}

.plan-name {
  color: #cf711f;
  font-size: 2rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.75px;
  margin-bottom: 3.2rem;
}

.plan-price {
  color: #333;
  font-size: 6.2rem;
  font-weight: 600;
  margin-bottom: 1.6rem;
}

.plan-price span {
  font-size: 3rem;
  font-weight: 500;
  margin-right: 0.8rem;
}

.plan-text {
  font-size: 1.6rem;
  line-height: 1.6rem;
  color: #6f6f6f;
}

.plan-sign-up {
  text-align: center;
  margin-top: 4.8rem;
}

.plan-details {
  font-size: 1.8rem;
  text-align: center;
}

.feature-icon {
  width: 3.2rem;
  height: 3.2rem;
  color: #e67e22;
  margin-bottom: 3.2rem;
  background-color: #fae5d3;
  padding: 1.6rem;
  border-radius: 50%;
}

.feature-title {
  font-size: 2.4rem;
  color: #333;
  font-weight: 700;
  margin-bottom: 1.6rem;
}

.feature-text {
  font-size: 1.8rem;
  line-height: 1.8;
}

/* ======================== */
/* CALL TO ACTION SECTION*/
/* ======================= */

.section-cta {
  padding: 4.8rem 0 12.8rem 0;
  /* nb -- I added the padding of 12.8rem, because I want the  the line between the footer section and the cta section to be in the middle (previously it was just padding: 9.6rem 0) */
}

.cta {
  display: grid;
  grid-template-columns: 2fr 1fr;
  background-color: #cf711f;
  border-radius: 11px;
  background-image: linear-gradient(to right bottom, #eb984e, #e67e22);
  overflow: hidden;
  /* temporary height below is removed, because I want the content of the form to dictate the height*/
  /* height: 50rem; */
}

.cta-text-box {
  padding: 4.8rem 6.4rem 6.4rem 6.4rem;
  color: #45260a; /* used a design principle that relates to using a deeper shade of the primary color*/
}

.cta .heading-secondary {
  color: #45260a;
  margin-bottom: 3.2rem;
}

.cta-text {
  font-size: 1.8rem;
  line-height: 1.8;
  margin-bottom: 4.8rem;
}

/* CALL TO ACTION FORM*/
.cta-form {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  column-gap: 3.2rem;
  row-gap: 2.4rem;
}

.cta-form label {
  display: block; /* this will place the label on its own line and not side by side to the input element as it was an inline element before it became block */
  font-size: 1.6rem;
  font-weight: 500;
  margin-bottom: 1.2rem;
}

.cta-form input,
.cta-form select {
  width: 100%;
  padding: 1.2rem;
  font-size: 1.8rem;
  font-family: inherit; /* force the input to inherit the font-family of the body */
  color: inherit;
  border: none;
  background-color: #fdf2e9;
  border-radius: 9px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
}

.cta-form input::placeholder {
  color: #aaa;
}

.cta-image-box {
  /*styling an img directly  on the css file - like "url("img/eating.jpg")- this won't work because we are on the css folder and there is no img folder in the css folder(like the case of index.html which has access to the img folder directly), so to access the img folder, we go one level up directly to the root and get access to the img folder, note code below */
  /* I also added an overlay to the image, using the linear gradient and setting the colors on the linear gradient transparent for the image to be vivid */
  background-image: linear-gradient(
      to right bottom,
      rgba(235, 151, 78, 0.35),
      rgba(230, 125, 34, 0.35)
    ),
    url("../img/eating.jpg");
  background-size: cover;
  background-position: center;
}

.cta *:focus {
  outline: none;
  box-shadow: 0 0 0 0.8rem rgba(250, 229, 211, 0.5);
}

/* ======================== */
/* FOOTER */
/* ======================= */
.footer {
  padding: 12.8rem 0;
  /*  i added more padding to the section of the footer to distinguish the footer section from other sections of my webpage */
  border-top: 1px solid #eee;
}

.grid--footer {
  grid-template-columns: 1.5fr 1.5fr 1fr 1fr 1fr;
}

/*to push the copyright content to the bottom to align with the footer links, I had tto set the container that houses copyright to display flex and give copyright class: margin-top: auto */
.logo-col {
  display: flex;
  flex-direction: column;
}

.footer-logo {
  display: block; /* because links are inline elements */
  margin-bottom: 2.4rem;
}

.social-links {
  list-style: none;

  display: flex;
  gap: 2.4rem;
}

.social-icon {
  width: 2.4rem;
  height: 2.4rem;
}

.copyright {
  font-size: 1.4rem;
  line-height: 1.6rem;
  color: #767676;
  margin-top: auto;
}

.footer-heading {
  font-size: 1.8rem;
  font-weight: 500;
  margin-bottom: 4rem;
}

.contacts {
  font-style: normal;
  font-size: 1.6rem;
  line-height: 1.6rem;
}

.address {
  margin-bottom: 2.4rem;
}

.footer-nav {
  list-style: none;

  display: flex;
  flex-direction: column;
  gap: 2.4rem;
}

.footer-link:link,
.footer-link:visited {
  text-decoration: none;
  font-size: 1.6rem;
  color: #767676;
  transition: all 0.3s;
}

.footer-link:hover,
.footer-link:active {
  color: #555;
}
